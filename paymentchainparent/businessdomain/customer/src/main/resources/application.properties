## swagger-ui custom path
##springdoc.swagger-ui.path=/swagger-ui.html
## Disabling the swagger-ui
##springdoc.swagger-ui.enabled=true
##server.port=8080    
##custom.activeprofileName=local
#
###
##Configuration for infraestructure 
#
#spring.config.import=optional:configserver:http://localhost:8888
#spring.cloud.config.name=config-client
#spring.cloud.config.profile=local
##java -jar -Dspring.cloud.config.name=config-client -Dspring.cloud.config.profile=log path
#
#spring.application.name=businessdomain-customer
#
#eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER:http://localhost:8761/eureka}
#eureka.client.register-with-eureka=true
#eureka.client.healthcheck.enabled=true
#eureka.client.fetch-registry=true
#
#spring.cloud.config.enabled=true
#
#management.endpoints.web.exposure.include=*
#
###usado solo para diagnostico del problema de conexion al servidor de configuracion 
##logging.level.org.springframework.cloud=DEBUG
##logging.level.org.springframework.boot.context.config=DEBUG
#
##Buenas Practicas Apis
#server.servlet.context-path=/business/V2
#
##Conection postgrest
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.datasource.url=jdbc:postgresql://postgres_db:5432/customer
#spring.datasource.username=postgres
#spring.datasource.password=qwerty



#New Configuration  docker
server.port=8081
spring.cloud.config.enabled=false

spring.application.name=businessdomain-customer

eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER:http://localhost:8761/eureka}
eureka.client.register-with-eureka=true
eureka.client.healthcheck.enabled=true
eureka.client.fetch-registry=true



management.endpoints.web.exposure.include=*



spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.datasource.url=jdbc:postgresql://postgres_db:5432/customer
spring.datasource.username=postgres
spring.datasource.password=qwerty
